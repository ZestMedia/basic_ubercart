<?php
/**
 * @file
 * Code for the Basic Ubercart Product Enquire Form feature.
 */

include_once 'basic_ubercart_product_enquire_form.features.inc';

/**
 * Implements hook_node_view().
 */

function basic_ubercart_product_enquire_form_node_view($node, $view_mode, $langcode) {

  global $user;

  // Only add price request link if add to cart button is present.
  if ($node->type === 'product' && $user->uid != '0') {

    $webform_node = basic_ubercart_product_enquire_form_get_form();

    $webform = drupal_get_form('webform_client_form_1', $webform_node, array());

    // Put webform into node.
    $node->content['product_enquiry'] = array(
      '#markup'=> drupal_render($webform),
      '#view_mode' => $view_mode,
      '#weight' => 20,
      '#attributes' => array(
        'class' => array('product-enquiry'),
      ),
    );

  }

}

/**
 * Implements hook_field_extra_fields().
 *
 * Adds the "Product Enquiry" block.
 */
function basic_ubercart_product_enquire_form_field_extra_fields() {
  $extra = array();

  $extra['node']['product'] = array(
    'display' => array(
      'product_enquiry' => array(
        'label' => t('Product Enquiry'),
        'description' => t('The Product Enquiry block.'),
        'weight' => 20,
      ),
    ),
  );

  return $extra;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alters the product enquire webform to add a custom submit function.
 */

function basic_ubercart_product_enquire_form_form_alter(&$form, &$form_state, $form_id) {

  $webform = basic_ubercart_product_enquire_form_get_form();

  if ($form_id === 'webform_client_form_' . $webform->nid) {

    array_unshift($form['#submit'], 'basic_ubercart_product_enquire_form_attach_cart');

  }

}

/**
 * Returns the 'Product Enquire' webform node.
 */
function basic_ubercart_product_enquire_form_get_form() {

    // Get the webform by UUID.
    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
      ->propertyCondition('uuid', '06155025-e656-4a2c-a45c-afdde3ee5264')
      ->propertyCondition('status', 1)
      ->range(0,1)
      ->execute();
    if (!empty($entities['node'])) {
      $webform_node = node_load(array_shift(array_keys($entities['node'])));
    }

    return $webform_node;

}

/**
 * Attaches the users cart to the webform submission.
 */
function basic_ubercart_product_enquire_form_attach_cart($form, &$form_state) {

  global $user;
  $user = user_load($user->uid);

  $form_state['values']['submitted']['cart'] = $cart;

}

/**
 * Returns an HTML list of orders for a certain user.
 */
function basic_ubercart_product_enquire_form_generate_cart_list() {

  $cart = '';

  $cart_products = uc_cart_get_contents();

  foreach($cart_products as $cart_product) {
    $product_url = 'http://' . $_SERVER['HTTP_HOST'] . '/' . drupal_get_path_alias('node/' . $cart_product->nid);
    $cart .= '<a href="' . $product_url . '">' . $cart_product->title . '</a><br>';
  }

  return $cart;
}
